// -----------------------------------------------------------------------------
// This file contains CSS helper classes.
// -----------------------------------------------------------------------------

/**
 * Clear inner floats
 */
.clearfix::after {
  clear: both;
  content: '';
  display: table;
}

/**
 * Hide text while making it readable for screen readers
 * 1. Needed in WebKit-based browsers because of an implementation bug;
 *    See: https://code.google.com/p/chromium/issues/detail?id=457146
 */
.hide-text {
  overflow: hidden;
  padding: 0; /* 1 */
  text-indent: 101%;
  white-space: nowrap;
}

/**
 * Hide element while making it readable for screen readers
 * Shamelessly borrowed from HTML5Boilerplate:
 * https://github.com/h5bp/html5-boilerplate/blob/master/src/css/main.css#L119-L133
 */
.visually-hidden { 
  border: 0;
  clip: rect(0 0 0 0);
  height: 1px;
  margin: -1px;
  overflow: hidden;
  padding: 0;
  position: absolute;
  width: 1px;
}

/**
 * Hide elements with .json which are just to house json data for js
 */
.json {
  display: none;
}


/**
 * opacity--[0-100 x 5]
 */
$begin: 0;
$end: 100;
$step: 5;
@while $begin <= $end {
  .opacity--#{$begin} {
    opacity: $begin / 100;
  }
  $begin: $begin + $step;
}


/**
 * Blend Modes
 */
$modes: screen, overlay, darken, lighten, color-dodge, color-burn, hard-light, soft-light, difference, exclusion, hue, saturation, color, luminosity, normal;
@each $mode in $modes {
  .blend--#{$mode} {
    mix-blend-mode: $mode;
  }
}

/**
 * hidden on breakpoints
 */
@each $name, $size in $breakpoints {
  @media (min-width: #{map-get($breakpoints, $name)}) {
    .hidden--#{$name} {
      display: none;
    }
  }
}

.loading {
  cursor: wait;
}
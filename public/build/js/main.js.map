{"version":3,"names":[],"mappings":"","sources":["main.js"],"sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n\"use strict\";\n\n/*!\r\n * classie - class helper functions\r\n * from bonzo https://github.com/ded/bonzo\r\n *\r\n * classie.has( elem, 'my-class' ) -> true/false\r\n * classie.add( elem, 'my-new-class' )\r\n * classie.remove( elem, 'my-unwanted-class' )\r\n * classie.toggle( elem, 'my-class' )\r\n */\n\n/*jshint browser: true, strict: true, undef: true */\n/*global define: false */\n\n(function (window) {\n\n    'use strict';\n\n    // class helper functions from bonzo https://github.com/ded/bonzo\n\n    function classReg(className) {\n        return new RegExp(\"(^|\\\\s+)\" + className + \"(\\\\s+|$)\");\n    }\n\n    // classList support for class management\n    // altho to be fair, the api sucks because it won't accept multiple classes at once\n    var hasClass, addClass, removeClass;\n\n    if ('classList' in document.documentElement) {\n        hasClass = function hasClass(elem, c) {\n            return elem.classList.contains(c);\n        };\n        addClass = function addClass(elem, c) {\n            elem.classList.add(c);\n        };\n        removeClass = function removeClass(elem, c) {\n            elem.classList.remove(c);\n        };\n    } else {\n        hasClass = function hasClass(elem, c) {\n            return classReg(c).test(elem.className);\n        };\n        addClass = function addClass(elem, c) {\n            if (!hasClass(elem, c)) {\n                elem.className = elem.className + ' ' + c;\n            }\n        };\n        removeClass = function removeClass(elem, c) {\n            elem.className = elem.className.replace(classReg(c), ' ');\n        };\n    }\n\n    function toggleClass(elem, c) {\n        var fn = hasClass(elem, c) ? removeClass : addClass;\n        fn(elem, c);\n    }\n\n    var classie = {\n        // full names\n        hasClass: hasClass,\n        addClass: addClass,\n        removeClass: removeClass,\n        toggleClass: toggleClass,\n        // short names\n        has: hasClass,\n        add: addClass,\n        remove: removeClass,\n        toggle: toggleClass\n    };\n\n    module.exports = classie;\n})(window);\n\n},{}],2:[function(require,module,exports){\n'use strict';\n\n/**\r\n * mlpushmenu.js v1.0.0\r\n * http://www.codrops.com\r\n *\r\n * Licensed under the MIT license.\r\n * http://www.opensource.org/licenses/mit-license.php\r\n *\r\n * Copyright 2013, Codrops\r\n * http://www.codrops.com\r\n */\n;(function (window) {\n    'use strict';\n\n    var classie = require('./classie');\n\n    function extend(a, b) {\n        for (var key in b) {\n            if (b.hasOwnProperty(key)) {\n                a[key] = b[key];\n            }\n        }\n        return a;\n    }\n\n    // taken from https://github.com/inuyaksa/jquery.nicescroll/blob/master/jquery.nicescroll.js\n    function hasParent(e, id) {\n        if (!e) return false;\n        var el = e.target || e.srcElement || e || false;\n        while (el && el.id != id) {\n            el = el.parentNode || false;\n        }\n        return el !== false;\n    }\n\n    // returns the depth of the element \"e\" relative to element with id=id\n    // for this calculation only parents with classname = waypoint are considered\n    function getLevelDepth(e, id, waypoint, cnt) {\n        cnt = cnt || 0;\n        if (e.id.indexOf(id) >= 0) return cnt;\n        if (classie.has(e, waypoint)) {\n            ++cnt;\n        }\n        return e.parentNode && getLevelDepth(e.parentNode, id, waypoint, cnt);\n    }\n\n    // http://coveroverflow.com/a/11381730/989439\n    function mobilecheck() {\n        var check = false;\n        (function (a) {\n            if (/(android|ipad|playbook|silk|bb\\d+|meego).+mobile|avantgo|bada\\/|blackberry|blazer|compal|elaine|fennec|hiptop|iemobile|ip(hone|od)|iris|kindle|lge |maemo|midp|mmp|netfront|opera m(ob|in)i|palm( os)?|phone|p(ixi|re)\\/|plucker|pocket|psp|series(4|6)0|symbian|treo|up\\.(browser|link)|vodafone|wap|windows (ce|phone)|xda|xiino/i.test(a) || /1207|6310|6590|3gso|4thp|50[1-6]i|770s|802s|a wa|abac|ac(er|oo|s\\-)|ai(ko|rn)|al(av|ca|co)|amoi|an(ex|ny|yw)|aptu|ar(ch|go)|as(te|us)|attw|au(di|\\-m|r |s )|avan|be(ck|ll|nq)|bi(lb|rd)|bl(ac|az)|br(e|v)w|bumb|bw\\-(n|u)|c55\\/|capi|ccwa|cdm\\-|cell|chtm|cldc|cmd\\-|co(mp|nd)|craw|da(it|ll|ng)|dbte|dc\\-s|devi|dica|dmob|do(c|p)o|ds(12|\\-d)|el(49|ai)|em(l2|ul)|er(ic|k0)|esl8|ez([4-7]0|os|wa|ze)|fetc|fly(\\-|_)|g1 u|g560|gene|gf\\-5|g\\-mo|go(\\.w|od)|gr(ad|un)|haie|hcit|hd\\-(m|p|t)|hei\\-|hi(pt|ta)|hp( i|ip)|hs\\-c|ht(c(\\-| |_|a|g|p|s|t)|tp)|hu(aw|tc)|i\\-(20|go|ma)|i230|iac( |\\-|\\/)|ibro|idea|ig01|ikom|im1k|inno|ipaq|iris|ja(t|v)a|jbro|jemu|jigs|kddi|keji|kgt( |\\/)|klon|kpt |kwc\\-|kyo(c|k)|le(no|xi)|lg( g|\\/(k|l|u)|50|54|\\-[a-w])|libw|lynx|m1\\-w|m3ga|m50\\/|ma(te|ui|xo)|mc(01|21|ca)|m\\-cr|me(rc|ri)|mi(o8|oa|ts)|mmef|mo(01|02|bi|de|do|t(\\-| |o|v)|zz)|mt(50|p1|v )|mwbp|mywa|n10[0-2]|n20[2-3]|n30(0|2)|n50(0|2|5)|n7(0(0|1)|10)|ne((c|m)\\-|on|tf|wf|wg|wt)|nok(6|i)|nzph|o2im|op(ti|wv)|oran|owg1|p800|pan(a|d|t)|pdxg|pg(13|\\-([1-8]|c))|phil|pire|pl(ay|uc)|pn\\-2|po(ck|rt|se)|prox|psio|pt\\-g|qa\\-a|qc(07|12|21|32|60|\\-[2-7]|i\\-)|qtek|r380|r600|raks|rim9|ro(ve|zo)|s55\\/|sa(ge|ma|mm|ms|ny|va)|sc(01|h\\-|oo|p\\-)|sdk\\/|se(c(\\-|0|1)|47|mc|nd|ri)|sgh\\-|shar|sie(\\-|m)|sk\\-0|sl(45|id)|sm(al|ar|b3|it|t5)|so(ft|ny)|sp(01|h\\-|v\\-|v )|sy(01|mb)|t2(18|50)|t6(00|10|18)|ta(gt|lk)|tcl\\-|tdg\\-|tel(i|m)|tim\\-|t\\-mo|to(pl|sh)|ts(70|m\\-|m3|m5)|tx\\-9|up(\\.b|g1|si)|utst|v400|v750|veri|vi(rg|te)|vk(40|5[0-3]|\\-v)|vm40|voda|vulc|vx(52|53|60|61|70|80|81|83|85|98)|w3c(\\-| )|webc|whit|wi(g |nc|nw)|wmlb|wonu|x700|yas\\-|your|zeto|zte\\-/i.test(a.substr(0, 4))) check = true;\n        })(navigator.userAgent || navigator.vendor || window.opera);\n        return check;\n    }\n\n    // returns the closest element to 'e' that has class \"classname\"\n    function closest(e, classname) {\n        if (classie.has(e, classname)) {\n            return e;\n        }\n        return e.parentNode && closest(e.parentNode, classname);\n    }\n\n    function mlPushMenu(el, trigger, options) {\n        this.el = el;\n        this.trigger = trigger;\n        this.options = extend(this.defaults, options);\n        // support 3d transforms\n        this.support = Modernizr.csstransforms3d;\n        if (this.support) {\n            this._init();\n        }\n    }\n\n    mlPushMenu.prototype = {\n        defaults: {\n            // overlap: there will be a gap between open levels\n            // cover: the open levels will be on top of any previous open level\n            type: 'overlap', // overlap || cover\n            // space between each overlaped level\n            levelSpacing: 40,\n            // classname for the element (if any) that when clicked closes the current level\n            backClass: 'mp-back'\n        },\n        _init: function _init() {\n            // if menu is open or not\n            this.open = false;\n            // level depth\n            this.level = 0;\n            // the moving wrapper\n            this.wrapper = document.getElementById('mp-pusher');\n            // the mp-level elements\n            this.levels = Array.prototype.slice.call(this.el.querySelectorAll('div.mp-level'));\n            // save the depth of each of these mp-level elements\n            var self = this;\n            this.levels.forEach(function (el, i) {\n                el.setAttribute('data-level', getLevelDepth(el, self.el.id, 'mp-level'));\n            });\n            // the menu items\n            this.menuItems = Array.prototype.slice.call(this.el.querySelectorAll('li'));\n            // if type == \"cover\" these will serve as hooks to move back to the previous level\n            this.levelBack = Array.prototype.slice.call(this.el.querySelectorAll('.' + this.options.backClass));\n            // event type (if mobile use touch events)\n            this.eventtype = mobilecheck() ? 'touchstart' : 'click';\n            // add the class mp-overlap or mp-cover to the main element depending on options.type\n            classie.add(this.el, 'mp-' + this.options.type);\n            // initialize / bind the necessary events\n            this._initEvents();\n        },\n        _initEvents: function _initEvents() {\n            var self = this;\n\n            // the menu should close if clicking somewhere on the body\n            var bodyClickFn = function bodyClickFn(el) {\n                self._resetMenu();\n                el.removeEventListener(self.eventtype, bodyClickFn);\n            };\n\n            // open (or close) the menu\n            this.trigger.addEventListener(this.eventtype, function (ev) {\n                ev.stopPropagation();\n                ev.preventDefault();\n                if (self.open) {\n                    self._resetMenu();\n                } else {\n                    self._openMenu();\n                    // the menu should close if clicking somewhere on the body (excluding clicks on the menu)\n                    document.addEventListener(self.eventtype, function (ev) {\n                        if (self.open && !hasParent(ev.target, self.el.id)) {\n                            bodyClickFn(this);\n                        }\n                    });\n                }\n            });\n\n            // opening a sub level menu\n            this.menuItems.forEach(function (el, i) {\n                // check if it has a sub level\n                var subLevel = el.querySelector('div.mp-level');\n                if (subLevel) {\n                    el.querySelector('a').addEventListener(self.eventtype, function (ev) {\n                        ev.preventDefault();\n                        var level = closest(el, 'mp-level').getAttribute('data-level');\n                        if (self.level <= level) {\n                            ev.stopPropagation();\n                            classie.add(closest(el, 'mp-level'), 'mp-level-overlay');\n                            self._openMenu(subLevel);\n                        }\n                    });\n                }\n            });\n\n            // closing the sub levels :\n            // by clicking on the visible part of the level element\n            this.levels.forEach(function (el, i) {\n                el.addEventListener(self.eventtype, function (ev) {\n                    var level = el.getAttribute('data-level');\n                    ev.stopPropagation();\n                    if (self.level > level) {\n                        self.level = level;\n                        self._closeMenu();\n                        return true;\n                    }\n                });\n            });\n\n            // by clicking on a specific element\n            this.levelBack.forEach(function (el, i) {\n                el.addEventListener(self.eventtype, function (ev) {\n                    ev.preventDefault();\n                    var level = closest(el, 'mp-level').getAttribute('data-level');\n                    if (self.level <= level) {\n                        ev.stopPropagation();\n                        self.level = closest(el, 'mp-level').getAttribute('data-level') - 1;\n                        self.level === 0 ? self._resetMenu() : self._closeMenu();\n                    }\n                });\n            });\n        },\n        _openMenu: function _openMenu(subLevel) {\n            // increment level depth\n            ++this.level;\n\n            // move the main wrapper\n            var levelFactor = (this.level - 1) * this.options.levelSpacing,\n                translateVal = this.options.type === 'overlap' ? this.el.offsetWidth + levelFactor : this.el.offsetWidth;\n\n            this._setTransform('translate3d(' + translateVal + 'px,0,0)');\n\n            if (subLevel) {\n                // reset transform for sublevel\n                this._setTransform('', subLevel);\n                // need to reset the translate value for the level menus that have the same level depth and are not open\n                for (var i = 0, len = this.levels.length; i < len; ++i) {\n                    var levelEl = this.levels[i];\n                    if (levelEl != subLevel && !classie.has(levelEl, 'mp-level-open')) {\n                        this._setTransform('translate3d(-100%,0,0) translate3d(' + -1 * levelFactor + 'px,0,0)', levelEl);\n                    }\n                }\n            }\n            // add class mp-pushed to main wrapper if opening the first time\n            if (this.level === 1) {\n                classie.add(this.wrapper, 'mp-pushed');\n                this.open = true;\n            }\n            // add class mp-level-open to the opening level element\n            classie.add(subLevel || this.levels[0], 'mp-level-open');\n        },\n        // close the menu\n        _resetMenu: function _resetMenu() {\n            this._setTransform('translate3d(0,0,0)');\n            this.level = 0;\n            // remove class mp-pushed from main wrapper\n            classie.remove(this.wrapper, 'mp-pushed');\n            this._toggleLevels();\n            this.open = false;\n        },\n        // close sub menus\n        _closeMenu: function _closeMenu() {\n            var translateVal = this.options.type === 'overlap' ? this.el.offsetWidth + (this.level - 1) * this.options.levelSpacing : this.el.offsetWidth;\n            this._setTransform('translate3d(' + translateVal + 'px,0,0)');\n            this._toggleLevels();\n        },\n        // translate the el\n        _setTransform: function _setTransform(val, el) {\n            el = el || this.wrapper;\n            el.style.WebkitTransform = val;\n            el.style.MozTransform = val;\n            el.style.transform = val;\n        },\n        // removes classes mp-level-open from closing levels\n        _toggleLevels: function _toggleLevels() {\n            for (var i = 0, len = this.levels.length; i < len; ++i) {\n                var levelEl = this.levels[i];\n                if (levelEl.getAttribute('data-level') >= this.level + 1) {\n                    classie.remove(levelEl, 'mp-level-open');\n                    classie.remove(levelEl, 'mp-level-overlay');\n                } else if (Number(levelEl.getAttribute('data-level')) == this.level) {\n                    classie.remove(levelEl, 'mp-level-overlay');\n                }\n            }\n        }\n    };\n\n    module.exports = mlPushMenu;\n})(window);\n\n},{\"./classie\":1}],3:[function(require,module,exports){\n'use strict';\n\n(function () {\n    'use strict';\n\n    var mlPushMenu = require('./mlpushmenu');\n\n    new mlPushMenu(document.getElementById('mp-menu'), document.getElementById('trigger'));\n})();\n\n},{\"./mlpushmenu\":2}]},{},[3]);\n"],"file":"main.js","sourceRoot":"/source/"}